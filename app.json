{
	"metadata": {
		"type": "App"
	},
	"project": {
		"shadows": true,
		"vr": false
	},
	"camera": {
		"metadata": {
			"version": 4.5,
			"type": "Object",
			"generator": "Object3D.toJSON"
		},
		"object": {
			"uuid": "08E2357F-5147-4E9B-AFAC-6BDCC7089924",
			"type": "PerspectiveCamera",
			"name": "Camera",
			"castShadow": true,
			"layers": 1,
			"matrix": [0.962236,0,-0.272217,0,-0.083116,0.952247,-0.293798,0,0.259218,0.305328,0.916286,0,0.103687,0.122131,0.366515,1],
			"fov": 50,
			"zoom": 1,
			"near": 0.1,
			"far": 100000,
			"focus": 10,
			"aspect": 1.905882,
			"filmGauge": 35,
			"filmOffset": 0
		}
	},
	"scene": {
		"metadata": {
			"version": 4.5,
			"type": "Object",
			"generator": "Object3D.toJSON"
		},
		"geometries": [
			{
				"uuid": "6D90C4BE-EBA6-4E21-8F54-7CFDAA61F30B",
				"type": "PlaneBufferGeometry",
				"width": 10,
				"height": 10,
				"widthSegments": 1,
				"heightSegments": 1
			},
			{
				"uuid": "D3008B2A-ACDD-43CC-87F7-4F942607D21A",
				"type": "BoxBufferGeometry",
				"width": 1,
				"height": 1,
				"depth": 1,
				"widthSegments": 1,
				"heightSegments": 1,
				"depthSegments": 1
			}],
		"materials": [
			{
				"uuid": "D671A438-D575-4021-8DC6-897E41D0587F",
				"type": "MeshToonMaterial",
				"color": 12040119,
				"emissive": 0,
				"specular": 1118481,
				"shininess": 30,
				"depthFunc": 3,
				"depthTest": true,
				"depthWrite": true,
				"stencilWrite": false,
				"stencilWriteMask": 255,
				"stencilFunc": 519,
				"stencilRef": 0,
				"stencilFuncMask": 255,
				"stencilFail": 7680,
				"stencilZFail": 7680,
				"stencilZPass": 7680
			},
			{
				"uuid": "81895CFD-E23F-47ED-BAB6-C86D6CD18736",
				"type": "MeshToonMaterial",
				"color": 13839454,
				"emissive": 0,
				"specular": 1118481,
				"shininess": 0,
				"depthFunc": 3,
				"depthTest": true,
				"depthWrite": true,
				"stencilWrite": false,
				"stencilWriteMask": 255,
				"stencilFunc": 519,
				"stencilRef": 0,
				"stencilFuncMask": 255,
				"stencilFail": 7680,
				"stencilZFail": 7680,
				"stencilZPass": 7680
			}],
		"object": {
			"uuid": "3741222A-BD8F-401C-A5D2-5A907E891896",
			"type": "Scene",
			"name": "Scene",
			"layers": 1,
			"matrix": [1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],
			"children": [
				{
					"uuid": "B7CBBC6F-EC26-49B5-8D0D-67D9C535924B",
					"type": "Group",
					"name": "Dummy",
					"layers": 1,
					"matrix": [1,0,0,0,0,1,0,0,0,0,1,0,0,0.101233,0.248598,1],
					"children": [
						{
							"uuid": "60B69C58-4201-43FD-815E-AD2EDFBBD0CE",
							"type": "PerspectiveCamera",
							"name": "PerspectiveCamera",
							"layers": 1,
							"matrix": [-1,0,0,0,0,1,0,0,0,0,-1,0,0,0,6,1],
							"fov": 50,
							"zoom": 1,
							"near": 0.1,
							"far": 1000,
							"focus": 10,
							"aspect": 1,
							"filmGauge": 35,
							"filmOffset": 0
						}]
				},
				{
					"uuid": "A460C230-DC88-4A8F-A3FB-AA0FE735F3ED",
					"type": "Mesh",
					"name": "Ground",
					"castShadow": true,
					"receiveShadow": true,
					"layers": 1,
					"matrix": [50,0,0,0,0,0,-50,0,0,1,0,0,0,-0.5,0,1],
					"geometry": "6D90C4BE-EBA6-4E21-8F54-7CFDAA61F30B",
					"material": "D671A438-D575-4021-8DC6-897E41D0587F"
				},
				{
					"uuid": "BDB8672A-FC64-4D40-9AA4-D907DF7AEA37",
					"type": "DirectionalLight",
					"name": "DirectionalLight",
					"castShadow": true,
					"layers": 1,
					"matrix": [2.399909,0,0,0,0,1,0,0,0,0,1.41106,0,0.225563,10.511489,17.853979,1],
					"color": 16777215,
					"intensity": 1,
					"shadow": {
						"camera": {
							"uuid": "6AD0CED5-9AA7-4DB8-A142-2F3C965444CF",
							"type": "OrthographicCamera",
							"layers": 1,
							"zoom": 1,
							"left": -5,
							"right": 5,
							"top": 5,
							"bottom": -5,
							"near": 0.5,
							"far": 500
						}
					}
				},
				{
					"uuid": "E90219C6-BD93-46F2-A060-6E6431DB740E",
					"type": "AmbientLight",
					"name": "AmbientLight",
					"layers": 1,
					"matrix": [1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],
					"color": 5066061,
					"intensity": 1
				},
				{
					"uuid": "DAFC4590-046E-4861-BCE0-A88F5B9C1FC0",
					"type": "Group",
					"name": "0",
					"castShadow": true,
					"layers": 1,
					"matrix": [1,0,0,0,0,1,0,0,0,0,1,0,0,-0.634587,0,1],
					"children": [
						{
							"uuid": "26DAAD69-725D-43B7-AF9D-990A99DEF8C5",
							"type": "Mesh",
							"name": "Box",
							"castShadow": true,
							"layers": 1,
							"matrix": [1,0,0,0,0,1,0,0,0,0,1,0,0,0.498577,0,1],
							"geometry": "D3008B2A-ACDD-43CC-87F7-4F942607D21A",
							"material": "81895CFD-E23F-47ED-BAB6-C86D6CD18736"
						}]
				},
				{
					"uuid": "E834C38C-878D-44A3-836E-D00EBC62F8F3",
					"type": "Group",
					"name": "Bars",
					"castShadow": true,
					"layers": 1,
					"matrix": [1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]
				}],
			"background": 16185078
		}
	},
	"scripts": {
		"60B69C58-4201-43FD-815E-AD2EDFBBD0CE": [
			{
				"name": "Player Camera",
				"source": "if(typeof jQuery=='undefined') {\n    var headTag = document.getElementsByTagName(\"head\")[0];\n    var jqTag = document.createElement('script');\n    jqTag.type = 'text/javascript';\n    jqTag.src = 'https://unpkg.com/jquery@3.3.1/dist/jquery.min.js';\n    // jqTag.onload = myJQueryCode;\n    headTag.appendChild(jqTag);\n}\n\nif(typeof TWEEN=='undefined') {\n    var headTag = document.getElementsByTagName(\"head\")[0];\n    var jqTag = document.createElement('script');\n    jqTag.type = 'text/javascript';\n    jqTag.src = 'https://s3.amazonaws.com/johnlim.dev/js/tween.umd.js';\n    // jqTag.onload = myJQueryCode;\n    headTag.appendChild(jqTag);\n}\n\nif (typeof Tone==\"undefined\") {\n\tvar headTag = document.getElementsByTagName(\"head\")[0];\n    var jqTag = document.createElement('script');\n    jqTag.type = 'text/javascript';\n    jqTag.src = 'https://cdnjs.cloudflare.com/ajax/libs/tone/13.0.1/Tone.min.js';\n    // jqTag.onload = myJQueryCode;\n    headTag.appendChild(jqTag);\n}\n\nplayer.setCamera( this );\n\nconst objToLookAt = this.parent;\n\nwindow.newZ = 10;\nlet initPos = this.position.clone();\n\nconst displacement = new THREE.Vector3(0, 4, 0);\n\nthis.position.z = initPos.z + window.newZ;\n\t\ndisplacement.y = 4.0 + window.newZ * 0.1;\n\nfunction update( event ) {\n\t\n\tthis.position.z = THREE.Math.lerp(this.position.z, initPos.z + window.newZ, Math.min(event.delta * 0.01, 1));\n\t\n\tdisplacement.y = THREE.Math.lerp(displacement.y, window.barArrayInt.length / 4 , Math.min(event.delta * 0.01, 1)  );\n\t\n\tthis.lookAt( displacement );\n}\n\n$(\"#player\").on('wheel', function(event) {\n    const delta = Math.sign(event.originalEvent.deltaY);\n\twindow.newZ += delta;\n\tif (window.newZ < 10) {\n\t\twindow.newZ = 10;\n\t}\n});"
			}],
		"B7CBBC6F-EC26-49B5-8D0D-67D9C535924B": [
			{
				"name": "Orbit",
				"source": "const mouse = {x : -1 , y : 1};\nconst mouseDelta = {x : 0, y : 0};\n\nwindow.mouse = mouse;\n\nconst initRot = this.quaternion.clone();\n\nconst vector3X = new THREE.Vector3( 1, 0, 0 );\nconst vector3Y = new THREE.Vector3( 0, 1, 0 );\n\nlet isMouseDown = false;\n\nthis.rotation.y = 1;\n\nlet finalRot = new THREE.Quaternion().setFromAxisAngle( new THREE.Vector3(-0.5,-0.5,0), 1);\n\nfunction update( event ) {\n\t\n\tlet time = event.time * 0.001;\n\t\n\tlet delta = event.delta * 0.001;\n\t\n\tthis.quaternion.slerp(finalRot, Math.min(1, delta * 3 ));\n\t\n\tif (this.rotation.x > 0) {\n\t\tthis.rotation.x = 0;\n\t}\n}\n\nfunction mousedown(event) {\n\tisMouseDown = true;\n\t\n\tlet newMouseX = ( event.clientX / window.innerWidth ) * 2 - 1;\n\tnewMouseX = Math.max(Math.min(newMouseX, 1), -1);\n\tlet newMouseY = - ( event.clientY / window.innerHeight ) * 2 + 1;\n\tnewMouseY = Math.max(Math.min(newMouseY, 1), -1);\n\t\n\tmouse.x = newMouseX;\n\tmouse.y = newMouseY;\n\t\n\tdocument.getElementById(\"player\").style.cursor = \"move\";\n}\n\nfunction mouseup(event) {\n\tisMouseDown = false;\n\t\n\tdocument.getElementById(\"player\").style.cursor = \"auto\";\n}\n\nfunction mousemove(event) {\n\tif (isMouseDown) {\n\t\tlet newMouseX = ( event.clientX / window.innerWidth ) * 2 - 1;\n\t\tnewMouseX = Math.max(Math.min(newMouseX, 1), -1);\n\t\tlet newMouseY = - ( event.clientY / window.innerHeight ) * 2 + 1;\n\t\tnewMouseY = Math.max(Math.min(newMouseY, 1), -1);\n\t\t\n\t\tmouseDelta.x = newMouseX - mouse.x;\n\t\tmouseDelta.y = newMouseY - mouse.y;\n\t\t\n\t\tmouse.x = newMouseX;\n\t\tmouse.y = newMouseY;\n\t\t\n\t\tlet xRot = new THREE.Quaternion();\n\t\txRot.setFromAxisAngle( vector3Y, -mouseDelta.x * 20);\n\n\t\tlet yRot = new THREE.Quaternion();\n\t\t// yRot.setFromAxisAngle( vector3X, -mouseDelta.y * 20 );\n\n\t\tfinalRot = xRot.multiply(yRot).multiply(this.quaternion);\n\t\t\n\t\tconsole.log(mouseDelta);\n\t}\n}\n"
			}],
		"3741222A-BD8F-401C-A5D2-5A907E891896": [
			{
				"name": "InitSetup",
				"source": "renderer.shadowMap.enabled = true;\nrenderer.shadowMap.type = THREE.PCFSoftShadowMap;\n\nfunction update( event ) {\n\tTWEEN.update();\n}"
			}],
		"E834C38C-878D-44A3-836E-D00EBC62F8F3": [
			{
				"name": "BarManager",
				"source": "const barObj = scene.getObjectByName(\"0\");\nbarObj.scale.y = 0.0001;\nbarObj.visible = false;\n\nconst barCount = 10;\n\nconst red = new THREE.Color(0.9255, 0.1843, 0.6078);\nconst blue = new THREE.Color(0.1882, 0.3490, 0.9137);\n\nvar barArrayInt = [];\nvar barArrayObj = [];\n\nwindow.barArrayInt = barArrayInt;\nwindow.barArrayObj = barArrayObj;\n\nwindow.BarManager = this;\nwindow.swapDelay = 50;\n\nlet runOnlyOnce = true;\n\nvar synth = new Tone.PolySynth(4, Tone.Synth, {\n  oscillator : {\n\t\ttype : \"triangle\"\n\t}\n}).toMaster();\n//set the attributes using the set interface\nsynth.set(\"detune\", -1200);\n//play a chord\n\nfunction update( event ) {\n\tif (runOnlyOnce) {\n\t\tgenerateBars( barCount );\n\t\trunOnlyOnce = false;\n\t}\n}\n\nfunction generateBars( maxNum ) {\n\t\n\tmaxNum = parseInt(maxNum);\n\t\n\tif (!Number.isInteger(maxNum) || maxNum < 1) {\n\t\treturn false;\n\t}\n\t\n\t\n\t\n\tbarArrayInt.length = 0;\n\twindow.BarManager.children.length = 0;\n\tbarArrayObj.length = 0;\n\t\n\tfor( let i = 0; i < maxNum; i++ ) {\n\t\tbarArrayInt.push(i + 1);\n\t}\n\t\n\tshuffle(barArrayInt);\n\t\n\twidth = maxNum;\n\n\tfor( let i = 0; i < maxNum; i++ ) {\n\t\tlet newBar = barObj.GdeepCloneMaterials();\n\t\tnewBar.visible = false;\n\t\tnewBar.position.x = -width / 2.0 + i * width / (maxNum * 1.0 - 1.0);\n\t\tnewBar.userData.scaleY = barArrayInt[i];\n\t\t\n\t\tlet material = newBar.children[0].material;\n\t\t\n\t\tlet eachDelay = 500 / maxNum;\n\t\t\n\t\tnewBar.userData.tween = new TWEEN.Tween(newBar.scale)\n        .to({ y: newBar.userData.scaleY }, 300)\n        .easing(TWEEN.Easing.Quartic.Out)\n\t\t.delay(100 + i * eachDelay)\n\t\t.onStart(function() {\n\t\t\tnewBar.visible = true;\n\t\t\tsynth.triggerAttackRelease([100 + barArrayInt[i] * 1000 / barArrayInt.length ], 0.0005 );\n\t\t})\n        .start();\n\t\t\n\t\t\t\t\n\t\tnew TWEEN.Tween(material.color)\n        .to({ r: blue.r, g: blue.g, b: blue.b}, 300)\n        .easing(TWEEN.Easing.Sinusoidal.Out)\n\t\t.delay(100 + i * eachDelay)\n        .start();\n\n\t\t\n\t\twindow.BarManager.add(newBar);\n\t\n\t\tbarArrayObj.push(newBar);\n\t}\n\t\n\twindow.newZ = maxNum;\n}\n\nfunction setSwapDelay(delay) {\n\tif (Number.isInteger(delay) && delay > 0) {\n\t\twindow.swapDelay = delay;\n\t\treturn true;\n\t}\n\treturn false;\n}\n\nfunction swap(i, j) {\n\treturn new Promise(resolve => {\n\t\tlet temp = barArrayInt[i]\n\t\tbarArrayInt[i] = barArrayInt[j];\n\t\tbarArrayInt[j] = temp;\n\t\t\n\t\tbari = barArrayObj[i];\n\t\tbari_x = bari.position.x;\n\t\tbarj = barArrayObj[j];\n\t\tbarj_x = barj.position.x;\n\t\t\n\t\tbari.children[0].material.color.copy(red);\n\t\tbarj.children[0].material.color.copy(red);\n\t\t\n\t\tnew TWEEN.Tween(bari.position)\n        .to({ x : barj_x }, window.swapDelay) \n        .easing(TWEEN.Easing.Cubic.Out)\n        .start();\n\t\t\n\t\tnew TWEEN.Tween(barj.position)\n        .to({ x : bari_x }, window.swapDelay) \n        .easing(TWEEN.Easing.Cubic.Out)\n\t\t.onComplete(function() {\n\t\t\tbari.children[0].material.color.copy(blue);\n\t\t\tbarj.children[0].material.color.copy(blue);\n\t\t\tresolve('sorted');\n\t\t})\n        .start();\n\t\t\n\t\tsynth.triggerAttackRelease([100 + barArrayInt[i] * 1000 / barArrayInt.length, 100 + barArrayInt[j] * 1000 / barArrayInt.length], 0.0005);\n\t\t\n\t\ttemp = barArrayObj[i];\n\t\tbarArrayObj[i] = barArrayObj[j];\n\t\tbarArrayObj[j] = temp;\n\t});\n}\n\nfunction sortCompleted() {\n\tfor (let i = 0 ; i < barArrayObj.length; i++) {\n\t\t\n\t\tlet barObj = barArrayObj[i];\n\t\t\n\t\tlet material = barObj.children[0].material;\n\t\t\t\t\n\t\tnew TWEEN.Tween(material.color)\n        .to({ r: red.r, g: red.g, b: red.b}, 100)\n        .easing(TWEEN.Easing.Exponential.Out)\n\t\t.delay(100 + i * 20)\n\t\t.onStart(function() {\n\t\t\tsynth.triggerAttackRelease([100 + barObj.userData.scaleY * 1000 / barArrayObj.length ], 0.0005 );\n\t\t})\n\t\t.onComplete(function(){\n\t\t\tnew TWEEN.Tween(material.color)\n\t\t\t.to({ r: blue.r, g: blue.g, b: blue.b}, 100)\n\t\t\t.easing(TWEEN.Easing.Sinusoidal.Out)\n\t\t\t.start();\n\t\t})\n        .start();\n\t}\n}\n\nfunction shuffle(a) {\n    var j, x, i;\n    for (i = a.length - 1; i > 0; i--) {\n        j = Math.floor(Math.random() * (i + 1));\n        x = a[i];\n        a[i] = a[j];\n        a[j] = x;\n    }\n    return a;\n}\n\nwindow.generateBars = generateBars;\nwindow.swap = swap;\nwindow.sortCompleted = sortCompleted;\n\n/*\n\n\n\nasync function insertionSort(arr) {\n\tfor(i = 1; i < arr.length; i++) {\n\t\twhile(i - 1 >= 0 && arr[i-1] > arr[i]) {\n\t\t\tawait window.swap(i, i - 1);\n\t\t\ti--;\n\t\t}\n\t}\n\t\n\tsetTimeout(function(){\n\t\twindow.sortCompleted();\n\t}, 500);\n}\n\nwindow.insertionSort = insertionSort;\n\n\n\n*/\n\n\n/** Gives the aptitude for an object3D to clone recursively with its material cloned (normal clone does not clone material)*/\n\nTHREE.Object3D.prototype.GdeepCloneMaterials = function() {\n\tvar object = this.clone( new THREE.Object3D(), false );\n\n\tfor ( var i = 0; i < this.children.length; i++ ) {\n\n\t\tvar child = this.children[ i ];\n\t\tif ( child.GdeepCloneMaterials ) {\n\t\t\tobject.add( child.GdeepCloneMaterials() );\n\t\t} else {\n\t\t\tobject.add( child.clone() );\n\t\t}\n\n\t}\n\treturn object;\n};\n\nTHREE.Mesh.prototype.GdeepCloneMaterials = function( object, recursive ) {\n\tif ( object === undefined ) {\n\t\tobject = new THREE.Mesh( this.geometry, this.material.clone() );\n\t\tobject.castShadow = true;\n\t}\n\n\tTHREE.Object3D.prototype.GdeepCloneMaterials.call( this, object, recursive );\n\n\treturn object;\n};\n\n\n"
			}],
		"BDB8672A-FC64-4D40-9AA4-D907DF7AEA37": [
			{
				"name": "",
				"source": "this.shadow.camera.left = -100;\nthis.shadow.camera.right = 100;\nthis.shadow.camera.top = 99;\nthis.shadow.camera.bottom = -1;\n\nfunction update( event ) {}"
			}]
	}
}